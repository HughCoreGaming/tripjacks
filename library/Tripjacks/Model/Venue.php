<?php

/**
 * Tripjacks_Model_Venue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Tripjacks_Model_Venue extends Tripjacks_Model_BaseVenue
{
    
    public function setUp() {
        $this->hasMany('Tripjacks_Model_Users', array(
            'local' => 'userid',
            'foreign' => 'userid'
                )
        );
    }

      public function getallnormalVenue() {
    $q = Doctrine_Query::create()
          ->from('Tripjacks_Model_Venue v')
            ->where('v.type = ?', 'normal');
    $result = $q->fetchArray();
    
    return $result;

  }
  
    
    
    
           public function getVenue($vid) {
        $q = Doctrine_Query::create()
                ->from('Tripjacks_Model_Venue v')
                ->where('v.venueid = ?', $vid);
        $result = $q->fetchArray();
        return $result;
    }

    public function getDay($vid) {
        $q = Doctrine_Query::create()
                ->from('Tripjacks_Model_Venue v')
                ->where('v.venueid = ?', $vid);
        $result = $q->fetchArray();
        return $result[0]['day'];
 
    }

    public function dispell_dates($day) {

        switch ($day) {
            case 'Monday':
                $day = 1;
                break;
            case 'Tuesday':
                $day = 2;
                break;
            case 'Wednesday':
                $day = 3;
                break;
            case 'Thursday':
                $day = 4;
                break;
            case 'Friday':
                $day = 5;
                break;
            case 'Saturday':
                $day = 6;
                break;
            case 'Sunday':
                $day = 7;
                break;
        }

        $todaydate = date("Y-m-d");
        $todayday = date("N");
        $year = date("Y");
        $winter_monthandday = '-03-01';
        $spring_monthandday = '-06-01';
        $summer_monthandday = '-9-01';
        $autumn_monthandday = '-12-01';
  

        if ($day == $todayday) {

            $startdate = $todaydate;
        } elseif ($day > $todayday) {

            $sum = $day - $todayday;
            $startdate = date('Y-m-d', strtotime($todaydate . ' + ' . $sum . ' days'));
        } elseif ($day < $todayday) {

            $sum = $todayday - $day;
            $sum + 6;
            $startdate = date('Y-m-d', strtotime($todaydate . ' + ' . $sum . ' days'));
        }
        
        //move date forward to new season if 4 weeks left
        
        $month = substr($startdate, 5, 2);
        
        $winterarr = array($year, $winter_monthandday);
        $winter_forward_date = join("", $winterarr);
        $springarr = array($year, $spring_monthandday);
        $spring_forward_date = join("", $springarr);
        $summerarr = array($year, $summer_monthandday);
        $summer_forward_date = join("", $summerarr);
        $autumnarr = array($year, $autumn_monthandday);
        $autumn_forward_date = join("", $autumnarr);
                
              
             if ($month == '02') {
            $startdate = $winter_forward_date;
        } elseif ($month == '05') {
            $startdate = $spring_forward_date;
        } elseif ($month == '08') {
            $startdate = $summer_forward_date;
        } elseif ($month == '11') {
            $startdate = $autumn_forward_date;
        }
 
        return $startdate;
    }
    
    
    

    public function add_week($date) {

        $year = date("Y");
        $winter_monthandday = '-03-01';
        $spring_monthandday = '-06-01';
        $summer_monthandday = '-9-01';
        $autumn_monthandday = '-12-01';

        $winterarr = array($year, $winter_monthandday);
        $winter_forward_date = join("", $winterarr);
        $springarr = array($year, $spring_monthandday);
        $spring_forward_date = join("", $springarr);
        $summerarr = array($year, $summer_monthandday);
        $summer_forward_date = join("", $summerarr);
        $autumnarr = array($year, $autumn_monthandday);
        $autumn_forward_date = join("", $autumnarr);

        if ($date < $winter_forward_date) {
            $diffweek = intval(abs(strtotime($date) - strtotime($winter_forward_date)) / 604800);
           
        } elseif ($date < $spring_forward_date) {
            $diffweek = intval(abs(strtotime($date) - strtotime($spring_forward_date)) / 604800);
          
        } elseif ($date < $summer_forward_date) {
            $diffweek = intval(abs(strtotime($date) - strtotime($summer_forward_date)) / 604800);
           
        } elseif ($date < $autumn_forward_date) {
            $diffweek = intval(abs(strtotime($date) - strtotime($autumn_forward_date)) / 604800);
           
        }

        
    

        $arr = array();

        array_push($arr, $date);

        $sum = 7;
        $i = 1;
        while ($i <= $diffweek-1) {
            $repdate = date('Y-m-d', strtotime($date . ' + ' . $sum . ' days'));

            array_push($arr, $repdate);
            $i++;
            $sum = $sum + 7;
        }

        return $arr;
    }
    
    
    public function get_season($month, $the_year) {


        if ($month == '01') {
            $the_season = "Winter";
        } elseif ($month == '02') {
            $the_season = "Winter";
        } elseif ($month == '03') {
            $the_season = "Spring";
        } elseif ($month == '04') {
            $the_season = "Spring";
        } elseif ($month == '05') {
            $the_season = "Spring";
        } elseif ($month == '06') {
            $the_season = "Summer";
        } elseif ($month == '07') {
            $the_season = "Summer";
        } elseif ($month == '08') {
            $the_season = "Summer";
        } elseif ($month == '09') {
            $the_season = "Autumn";
        } elseif ($month == '10') {
            $the_season = "Autumn";
        } elseif ($month == '11') {
            $the_season = "Autumn";
        } elseif ($month == '12') {
            $the_season = "Winter";
            $the_year++;
        }
        
    


        $the_info = array($the_season, $the_year);
        $the_season2 = join(" ", $the_info);

        return $the_season2;
    }

}